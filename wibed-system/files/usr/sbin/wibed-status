#!/bin/sh

rm -f /tmp/wibed-status.tmp 2>/dev/null
(wget "$(uci get wibed.general.api_url)" -q -O /tmp/wibed-status.tmp 1>/dev/null 2>&1) &
sleep 5
killall -9 wget 2>/dev/null

#Checking which leds have your router

#By Default WDR4300 leds
DEFAULT_SERVER_LED=/sys/class/leds/tp-link\:blue\:qss

#ADD HERE YOUR NODE LEDS {WDR4300, WDR4900}
QSS=/sys/class/leds/tp-link\:blue\:qss
WPS=/sys/class/leds/tp-link\:blue\:wps

ls ${WPS} > /dev/null 2>&1
if [ $? == 0 ]; then
        DEFAULT_SERVER_LED=${WPS}
fi


if [ -f "/tmp/wibed-status.tmp" ]; then 
	echo default-on > ${DEFAULT_SERVER_LED}/trigger
	echo "" > /tmp/wibed-status.watchdog
	RETURN=0
	if [ "$(uci get wibed.general.status)" == "8" ]; then
		echo "[Warning] Node is in ERROR state"
		echo "." >> /tmp/wibed-error-status.watchdog
		if [ $(cat /tmp/wibed-error-status.watchdog | wc -l) -gt 10 ]; then
			echo "[Warning] Forcing node to go IDLE status"
			wibed-reset -d
		fi
	else
		echo "" > /tmp/wibed-error-status.watchdog
	fi
else
	echo timer > ${DEFAULT_SERVER_LED}/trigger
	echo "." >> /tmp/wibed-status.watchdog
	RETURN=1
fi

if [ $(cat /tmp/wibed-status.watchdog | wc -l) -gt 30 ]; then
	echo "Restoring defaults..." 
#	/sbin/firstboot -y
	rm -rf /tmp/usb-overlay/*
	rm -rf /tmp/flash-overlay/*
	rm -rf /overlay/*
	sync
	sleep 1
	/sbin/reboot -f
fi

echo $RETURN
exit $RETURN
